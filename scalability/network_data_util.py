# Python libraries
from pandas.core.frame import DataFrame
from datetime import datetime


def read_in_one_dimensional_dataset(
        file_name: str,
        column_name: str,
        data_type='int') -> DataFrame:
    """Reads a one dimensional dataset and stores it in a data frame.

    Parameters
    ----------
    file_name : str
        Name of the file to read in.
    column_name : str
        The name of the column in the resulting data frame.
    data_type : str
        String representation of the data type, the column in the resulting
        data frame should have.

    Returns
    -------
    Pandas data frame with one column.
    """
    res_data = []
    with open(file_name) as f:
        lines = f.readlines()

        if data_type == 'float':
            for line in lines:
                res_data.append(float(line))
        elif data_type == 'int':
            for line in lines:
                res_data.append(int(line))
        elif data_type == 'ts':
            for line in lines:
                res_data.append(parse_time_stamp(line))
        else:
            for line in lines:
                res_data.append(line)

    return DataFrame({column_name: res_data})


def parse_time_stamp(ts_str: str) -> datetime:
    """Parses the string into a datetime object.

    Parameters
    ----------
    ts_str : str
        String generated by the bash command 'date'.

    Returns
    -------
    Datetime object.
    """
    format_str = '%Y-%m-%d %H:%M:%S.%f'
    # Line array
    return datetime.strptime(ts_str.strip(), format_str)
